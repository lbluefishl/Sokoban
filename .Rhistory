library(ggplot2)
data <- read_excel("data.xlsx", sheet = "P3B - final")
library(readxl)
library(lme4)
library(lmerTest)
library(ggeffects)
library(ggplot2)
data <- read_excel("data.xlsx", sheet = "P3B - final")
#remove participants that did not make any moves, either before or after break
attach(data)
level <- as.factor(levelNumber)
levels(level) <- c("hard", "easy", "medium")
level <- factor(level, levels = c("easy", "medium", "hard"))
condition <- as.factor(condition)
levels(condition) <- c("No Break", "Non-HIS Break", "HIS Break")
id <- as.factor(prolificPID)
firstMoveNew <- as.factor(firstMoveNew)
differentFirstStrategy <- as.factor(differentFirstStrategy)
lengthBefore_scaled <- scale(BeforeMoves)
lengthBefore_scaled <- scale(moveBefore)
lm <- glmer(firstMoveNew ~ condition * level + lengthBefore_scaled + (1 | id), family = "binomial")
summary(lm)
lm2 <- glmer(differentFirstStrategy ~ condition * level + (1 | id), family = "binomial")
summary(lm2)
lm <- glmer(firstMoveNew ~ condition * level + lengthBefore_scaled + (1 | id), family = "binomial")
summary(lm)
lm <- glmer(firstMoveNew ~ condition * level + lengthBefore_scaled + (1 | id), family = "binomial")
summary(lm)
plogis(.610)
plogis(1.12)
lm3 <- glmer(completedLevel ~ firstMoveNew*level + (1|id), family = "binomial")
summary(lm3)
plogis(-.4)
lm3 <- glmer(firstMoveNew ~ condition*level + (1|id), family = "binomial")
summary(lm3)
lm3 <- glmer(firstMoveNew ~ condition*level + lengthBefore_scaled + (1|id), family = "binomial")
summary(lm3)
predictions <- ggpredict(lm3, terms = c("level", "condition")) |> plot(colors = "bw")
# Plot the marginal effects
plot(predictions) +
labs(title = "",
x = "Level Difficulty", y = "Predicted Probability of New Strategy")
library(readxl)
library(lme4)
library(lmerTest)
library(ggeffects)
library(ggplot2)
data <- read_excel("data.xlsx", sheet = "P4")
attach(data)
level <- as.factor(levelNumber)
levels(level) <- c("hard", "easy", "medium")
level <- factor(level, levels = c("easy", "medium", "hard"))
condition <- as.factor(condition)
levels(condition) <- c("No Break", "Non-HIS Break", "HIS Break")
id <- as.factor(prolificPID)
sex <- as.factor(sex)
handedness <- as.factor(handedness)
for (lvl in unique(level)) {
data_level <- data[level == lvl, ]
contingency_table <- table(data_level$completedLevel, data_level$condition)
rownames(contingency_table) <- c("No", "Yes")
colnames(contingency_table) <- c("no break","non-HIS", "HIS")
chi_square_result <- chisq.test(contingency_table)
cat("Chi-square test for Level", lvl, "\n")
print(chi_square_result)
cat("Contingency Table for Level", lvl, "\n")
print(contingency_table)
}
lm <- glmer(completedLevel ~  level * condition + (1|id), family="binomial")
summary(lm)
lm <- glmer(completedLevel ~  level * condition + sex + (1|id), family="binomial")
summary(lm)
summary(lm)
lm <- glmer(completedLevel ~   condition  + (1|id), family="binomial")
summary(lm)
lm <- glmer(completedLevel ~   level*condition  + (1|id), family="binomial")
summary(lm)
library(corrplot)
corr_matrix <- cor(data, use = "complete.obs")
library(randomForest)
install.packages("randomForest")
library(randomForest)
rf_model <- randomForest(completedLevel ~ ., data = data, importance = TRUE)
selected_data <- data[, c(data$trialOrder, data$conditionOrder, data$levelNumber, data$condition, data$age, sex, handedness, data$videoGameHours, data$smartphoneHours,data$sokobanFamiliarity, data$shortFormVideos), ]
selected_data <- data[, c(data$trialOrder, data$conditionOrder, data$levelNumber, data$condition, data$age, sex, handedness, data$videoGameHours, data$smartphoneHours,data$sokobanFamiliarity, data$shortFormVideos)]
trialOrder <- as.factor(trialOrder)
conditionOrder <- as.factor(conditionOrder)
selected_data <- data[, c(trialOrder, conditionOrder, data$levelNumber, data$condition, data$age, sex, handedness, data$videoGameHours, data$smartphoneHours,data$sokobanFamiliarity, data$shortFormVideos)]
rlang::last_trace()
str(data)
colnames(data)
library(dplyr)
selected_data <- data %>%
select(trialOrder, conditionOrder, levelNumber, condition, age, sex, handedness, videoGameHours, smartphoneHours, sokobanFamiliarity, shortFormVideos)
rf_model <- randomForest(completedLevel ~ ., data = selected_data)
completedLevel <- as.factor(completedLevel)
rf_model <- randomForest(completedLevel ~ ., data = selected_data)
rf_model
importance(rf_model)
varImpPlot(rf_model)
lm <- glmer(completedLevel ~  level * condition + age + (1|id), family="binomial")
summary(lm)
lm <- glmer(completedLevel ~  level * condition * age + (1|id), family="binomial")
summary(lm)
age <- scale(age)
lm <- glmer(completedLevel ~  level * condition * age + (1|id), family="binomial")
summary(lm)
print(lm, correlation = TRUE)
print(lm, correlation = TRUE)
vcov(lm)
lm <- glmer(completedLevel ~ level * condition + age + (1|id), family = "binomial", control = glmerControl(optimizer = "bobyqa"))
summary(lm)
data$age_centered <- scale(data$age, center = TRUE, scale = FALSE)
# Fit the model with a different optimizer
lm <- glmer(completedLevel ~ level * condition + age_centered + (1|id),
family = "binomial",
control = glmerControl(optimizer = "bobyqa"))
data$age_centered <- scale(data$age, center = TRUE, scale = FALSE)
# Fit the model with a different optimizer
lm <- glmer(completedLevel ~ level * condition + data$age_centered + (1|id),
family = "binomial",
control = glmerControl(optimizer = "bobyqa"))
# Check model summary
summary(lm)
# Fit the model with a different optimizer
lm <- glmer(completedLevel ~ level * condition + data$age_centered + conditionOrder + trialOrder + (1|id),
family = "binomial",
control = glmerControl(optimizer = "bobyqa"))
# Check model summary
summary(lm)
lm <- glmer(completedLevel ~ level*condition + (1|id), family = "binomial")
summary(lm)
lm <- glmer(completedLevel ~ level*condition + age + (1|id), family = "binomial")
summary(age)
lm <- glmer(completedLevel ~ level*condition + data$age + (1|id), family = "binomial")
summary(lm)
lm <- glmer(completedLevel ~ level*condition  + (1|id), family = "binomial")
lm <- glmer(completedLevel ~ age_centered + condition + (1 | participant_id),
family = "binomial",
control = glmerControl(optimizer = "bobyqa"))
lm <- glmer(completedLevel ~ level*condition + (1 | id),
family = "binomial",
control = glmerControl(optimizer = "bobyqa"))
summary(lm)
predictions <- ggpredict(lm, terms = c("level", "condition")) |> plot(colors = "bw")
# Plot the marginal effects
plot(predictions) +
labs(title = "",
x = "Level Difficulty", y = "Predicted Probability of Completing Level")
lvl5data <- data[data$levelNumber == 5, ]
lvl6data <- data[data$levelNumber == 6, ]
lvl7data <- data[data$levelNumber == 7, ]
lm <- glm(completedLevel ~ condition, data = lvl5data , family = "binomial" )
summary(lm)
lm <- glm(completedLevel ~ as.factor(condition), data = lvl5data , family = "binomial" )
summary(lm)
lm2 <- glm(completedLevel ~ as.factor(condition), data = lvl6data , family = "binomial" )
> lvl8data <- data[data$levelNumber == 8, ]
lvl8data <- data[data$levelNumber == 8, ]
lm2 <- glm(completedLevel ~ as.factor(condition), data = lvl7data , family = "binomial" )
summary(lm2)
lm3 <- glm(completedLevel ~ as.factor(condition), data = lvl8data , family = "binomial" )
summary(lm3)
mixed_model <- glmer(completedLevel ~ condition*level + (1|id),, family = "binomial")
mixed_model <- glmer(completedLevel ~ condition*level + (1|id), family = "binomial")
fixed_model <- glm(completedLevel ~ condition*level + (1|id), family = "binomial")
condition
level
fixed_model <- glm(completedLevel ~ condition*level, family = "binomial")
anova(fixed_model, mixed_model)
fixed_model
mixed_model
lr_test <- anova(fixed_model, mixed_model, test = "Chisq")
print(lr_test)
lm2 <- glm(completedLevel ~ as.factor(condition), data = lvl7data , family = "binomial" )
lm2 <- glm(completedLevel ~ as.factor(condition) + age, data = lvl7data , family = "binomial" )
summary(lm2)
plogis(-.44)
plogis(0)
lvl7data
for (lvl in unique(level)) {
data_level <- data[level == lvl, ]
contingency_table <- table(data_level$completedLevel, data_level$condition)
rownames(contingency_table) <- c("No", "Yes")
colnames(contingency_table) <- c("no break","non-HIS", "HIS")
chi_square_result <- chisq.test(contingency_table)
cat("Chi-square test for Level", lvl, "\n")
print(chi_square_result)
cat("Contingency Table for Level", lvl, "\n")
print(contingency_table)
}
lm <- glmer(completedLevel ~  level * condition + (1|id), family="binomial")
summary(lm)
lm <- glmer(completedLevel ~  level * condition + (1|id), family="binomial", optimizer = "bobyqa")
lm <- glmer(completedLevel ~  level * condition + (1|id), family="binomial", control = glmerControl(optimizer = "bobyqa"))
summary(lm)
lm <- glmer(completedLevel ~  level * condition + (1|id), family="binomial", control = glmerControl(optimizer = "bobyqa"))
summary(lm)
library(lme4)
library(readxl)
library(lmerTest)
data <- read_excel("data.xlsx", sheet = "P4A")
library(lme4)
library(readxl)
library(lmerTest)
data <- read_excel("data.xlsx", sheet = "P4A")
attach(data)
id <- as.factor(prolificPID)
condition <- as.factor(condition)
# differences between two break conditions
#focused immersion
lm <- lmer(f ~ condition + (1|id))
library(lme4)
library(readxl)
library(lmerTest)
data <- read_excel("data.xlsx", sheet = "P4A")
attach(data)
id <- as.factor(prolificPID)
condition <- as.factor(condition)
# differences between two break conditions
#focused immersion
lm <- lmer(f ~ condition + (1|id))
summary(lm)
#enjoyment
lm2 <- lmer(e ~ condition + (1|id))
summary(lm2)
#mind wandering
lm3 <- lmer(mw ~ condition + sex + (1|id))
summary(lm3)
#working on puzzle during break
lm4 <- lmer(pw ~ condition + (1|id))
summary(lm4)
#mental resource difference (after - before)
lm5 <- lmer(rd ~ condition + (1|id))
summary(lm5)
#resource recovery
lm6 <- lmer(ra ~ condition + (1|id))
summary(lm6)
#mind wandering associated with solving?
lm7 <- glmer(completedLevel ~ mw + (1|id), family="binomial")
summary(lm7)
#new moves?
lm8 <- lmer(nm ~ condition + (1|id))
summary(lm8)
library(lme4)
library(readxl)
library(lmerTest)
data <- read_excel("data.xlsx", sheet = "P4A")
attach(data)
id <- as.factor(prolificPID)
condition <- as.factor(condition)
levels(condition) <- c("No Break", "Non-HIS Break", "HIS Break")
# differences between two break conditions
#focused immersion
lm <- lmer(f ~ condition + (1|id))
summary(lm)
#enjoyment
lm2 <- lmer(e ~ condition + (1|id))
summary(lm2)
#mind wandering
lm3 <- lmer(mw ~ condition + sex + (1|id))
summary(lm3)
#working on puzzle during break
lm4 <- lmer(pw ~ condition + (1|id))
summary(lm4)
#mental resource difference (after - before)
lm5 <- lmer(rd ~ condition + (1|id))
summary(lm5)
#resource recovery
lm6 <- lmer(ra ~ condition + (1|id))
summary(lm6)
#mind wandering associated with solving?
lm7 <- glmer(completedLevel ~ mw + (1|id), family="binomial")
summary(lm7)
#new moves?
lm8 <- lmer(nm ~ condition + (1|id))
summary(lm8)
library(lme4)
library(readxl)
library(lmerTest)
data <- read_excel("data.xlsx", sheet = "P4A")
attach(data)
id <- as.factor(prolificPID)
condition <- as.factor(condition)
levels(condition) <- c("Non-HIS Break", "HIS Break")
lm <- lmer(f ~ condition + (1|id))
summary(lm)
#enjoyment
lm2 <- lmer(e ~ condition + (1|id))
summary(lm2)
#mind wandering
lm3 <- lmer(mw ~ condition + sex + (1|id))
summary(lm3)
#working on puzzle during break
lm4 <- lmer(pw ~ condition + (1|id))
summary(lm4)
#mental resource difference (after - before)
lm5 <- lmer(rd ~ condition + (1|id))
summary(lm5)
#resource recovery
lm6 <- lmer(ra ~ condition + (1|id))
summary(lm6)
#mind wandering associated with solving?
lm7 <- glmer(completedLevel ~ mw + (1|id), family="binomial")
summary(lm7)
#new moves?
lm8 <- lmer(nm ~ condition + (1|id))
summary(lm8)
condition
library(lme4)
library(readxl)
library(lmerTest)
data <- read_excel("data.xlsx", sheet = "P4A")
attach(data)
id <- as.factor(prolificPID)
condition <- as.factor(condition)
levels(condition) <- c("Non-HIS Break", "HIS Break")
# differences between two break conditions
#focused immersion
lm <- lmer(f ~ condition + (1|id))
summary(lm)
#enjoyment
lm2 <- lmer(e ~ condition + (1|id))
summary(lm2)
#mind wandering
lm3 <- lmer(mw ~ condition + sex + (1|id))
summary(lm3)
#working on puzzle during break
lm4 <- lmer(pw ~ condition + (1|id))
summary(lm4)
#mental resource difference (after - before)
lm5 <- lmer(rd ~ condition + (1|id))
summary(lm5)
#resource recovery
lm6 <- lmer(ra ~ condition + (1|id))
summary(lm6)
#mind wandering associated with solving?
lm7 <- glmer(completedLevel ~ mw + (1|id), family="binomial")
summary(lm7)
#new moves?
lm8 <- lmer(nm ~ condition + (1|id))
summary(lm8)
library(lme4)
library(readxl)
library(lmerTest)
data <- read_excel("data.xlsx", sheet = "P4A")
attach(data)
id <- as.factor(prolificPID)
condition <- as.factor(condition)
levels(condition) <- c("Non-HIS Break", "-HIS Break")
# differences between two break conditions
#focused immersion
lm <- lmer(f ~ condition + (1|id))
summary(lm)
#enjoyment
lm2 <- lmer(e ~ condition + (1|id))
summary(lm2)
#mind wandering
lm3 <- lmer(mw ~ condition + sex + (1|id))
summary(lm3)
#working on puzzle during break
lm4 <- lmer(pw ~ condition + (1|id))
summary(lm4)
#mental resource difference (after - before)
lm5 <- lmer(rd ~ condition + (1|id))
summary(lm5)
#resource recovery
lm6 <- lmer(ra ~ condition + (1|id))
summary(lm6)
#mind wandering associated with solving?
lm7 <- glmer(completedLevel ~ mw + (1|id), family="binomial")
summary(lm7)
#new moves?
lm8 <- lmer(nm ~ condition + (1|id))
summary(lm8)
lm3 <- lmer(mw ~ condition  + (1|id))
summary(lm3)
lm7 <- glmer(completedLevel ~ e + (1|id), family="binomial")
summary(lm7)
lm7 <- glmer(completedLevel ~ ra + (1|id), family="binomial")
summary(lm7)
lm7 <- glmer(completedLevel ~ rd + (1|id), family="binomial")
summary(lm7)
plogis(-.68)
plogis(-1.5)
plogis(.12)
plogis(-2.05)
library(readxl)
library(lme4)
library(lmerTest)
library(ggeffects)
library(ggplot2)
data <- read_excel("data.xlsx", sheet = "P3B - final")
#remove participants that did not make any moves, either before or after break
attach(data)
level <- as.factor(levelNumber)
levels(level) <- c("hard", "easy", "medium")
level <- factor(level, levels = c("easy", "medium", "hard"))
condition <- as.factor(condition)
levels(condition) <- c("No Break", "Non-HIS Break", "HIS Break")
id <- as.factor(prolificPID)
firstMoveNew <- as.factor(firstMoveNew)
differentFirstStrategy <- as.factor(differentFirstStrategy)
lengthBefore_scaled <- scale(moveBefore)
for (lvl in unique(level)) {
data_level <- data[level == lvl, ]
contingency_table <- table(data_level$firstMoveNew, data_level$condition)
rownames(contingency_table) <- c("No", "Yes")
colnames(contingency_table) <- c("no break","non-HIS", "HIS")
chi_square_result <- chisq.test(contingency_table)
cat("Chi-square test for Level", lvl, "\n")
print(chi_square_result)
cat("Contingency Table for Level", lvl, "\n")
print(contingency_table)
}
lm <- glmer(firstMoveNew ~ condition * level + lengthBefore_scaled + (1 | id), family = "binomial")
summary(lm)
lm2 <- glmer(differentFirstStrategy ~ condition * level + (1 | id), family = "binomial")
summary(lm2)
cat("Contingency Table for Level", lvl, "\n")
lm <- glmer(firstMoveNew ~ condition * level + lengthBefore_scaled + (1 | id), family = "binomial")
summary(lm)
lm <- glmer(firstMoveNew ~ condition * level + lengthBefore_scaled + (1 | id), family = "binomial", control = glmerControl(optimizer = "bobyqa"))
summary(lm)
predictions <- ggpredict(lm, terms = c("level", "condition")) |> plot(colors = "bw")
# Plot the marginal effects
plot(predictions) +
labs(title = "",
x = "Level Difficulty", y = "Predicted Probability of New Strategy")
library(readxl)
library(lme4)
library(lmerTest)
library(ggeffects)
library(ggplot2)
data <- read_excel("data.xlsx", sheet = "P4")
attach(data)
level <- as.factor(levelNumber)
levels(level) <- c("hard", "easy", "medium")
level <- factor(level, levels = c("easy", "medium", "hard"))
condition <- as.factor(condition)
levels(condition) <- c("No Break", "Non-HIS Break", "HIS Break")
id <- as.factor(prolificPID)
sex <- as.factor(sex)
handedness <- as.factor(handedness)
for (lvl in unique(level)) {
data_level <- data[level == lvl, ]
contingency_table <- table(data_level$completedLevel, data_level$condition)
rownames(contingency_table) <- c("No", "Yes")
colnames(contingency_table) <- c("no break","non-HIS", "HIS")
chi_square_result <- chisq.test(contingency_table)
cat("Chi-square test for Level", lvl, "\n")
print(chi_square_result)
cat("Contingency Table for Level", lvl, "\n")
print(contingency_table)
}
lm <- glmer(completedLevel ~  level * condition + (1|id), family="binomial", control = glmerControl(optimizer = "bobyqa"))
summary(lm)
predictions <- ggpredict(lm, terms = c("level", "condition")) |> plot(colors = "bw")
# Plot the marginal effects
plot(predictions) +
labs(title = "",
x = "Level Difficulty", y = "Predicted Probability of Completing Level")
data$levelNumber <- level
data$condition <- condition
interaction_plot <- data %>%
group_by(condition, levelNumber) %>%
summarise(prob_completed = mean(completedLevel, na.rm = TRUE), .groups = "drop") %>%
ggplot(aes(x = levelNumber, y = prob_completed, shape = as.factor(condition), group = condition)) +  # Change 'color' to 'shape'
geom_line() +
geom_point(size = 3) +  # Adjust the point size if needed
labs(title = "Interaction Plot of Condition and Level",
x = "Level", y = "Proportion of Completed Levels") +
theme_minimal() +
scale_shape_manual(values = c(16, 17, 18))  # Customize shapes
library(dplyr)
for (lvl in unique(level)) {
data_level <- data[level == lvl, ]
contingency_table <- table(data_level$completedLevel, data_level$condition)
rownames(contingency_table) <- c("No", "Yes")
colnames(contingency_table) <- c("no break","non-HIS", "HIS")
chi_square_result <- chisq.test(contingency_table)
cat("Chi-square test for Level", lvl, "\n")
print(chi_square_result)
cat("Contingency Table for Level", lvl, "\n")
print(contingency_table)
}
predictions <- ggpredict(lm, terms = c("level", "condition")) |> plot(colors = "bw")
# Plot the marginal effects
plot(predictions) +
labs(title = "",
x = "Level Difficulty", y = "Predicted Probability of Completing Level")
library(readxl)
library(lme4)
library(lmerTest)
library(ggeffects)
library(ggplot2)
data <- read_excel("data.xlsx", sheet = "P3B - final")
#remove participants that did not make any moves, either before or after break
attach(data)
level <- as.factor(levelNumber)
levels(level) <- c("hard", "easy", "medium")
level <- factor(level, levels = c("easy", "medium", "hard"))
condition <- as.factor(condition)
levels(condition) <- c("No Break", "Non-HIS Break", "HIS Break")
id <- as.factor(prolificPID)
firstMoveNew <- as.factor(firstMoveNew)
differentFirstStrategy <- as.factor(differentFirstStrategy)
lengthBefore_scaled <- scale(moveBefore)
lm3 <- glmer(completedLevel ~ firstMoveNew + (1|id), family = "binomial")
summary(lm3)
lm3 <- glmer(completedLevel ~ firstMoveNew*level + (1|id), family = "binomial")
summary(lm3)
